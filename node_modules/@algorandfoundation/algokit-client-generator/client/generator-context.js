"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.createGeneratorContext = void 0;
const get_call_config_summary_1 = require("./helpers/get-call-config-summary");
const sanitization_1 = require("../util/sanitization");
const algokit = __importStar(require("@algorandfoundation/algokit-utils"));
const createGeneratorContext = (app) => ({
    app,
    name: (0, sanitization_1.makeSafeTypeIdentifier)(app.contract.name),
    callConfig: (0, get_call_config_summary_1.getCallConfigSummary)(app),
    methodSignatureToUniqueName: app.contract.methods.reduce((acc, cur) => {
        const signature = algokit.getABIMethodSignature(cur);
        acc[signature] = app.contract.methods.some((m) => m.name === cur.name && m !== cur) ? signature : cur.name;
        return acc;
    }, {}),
});
exports.createGeneratorContext = createGeneratorContext;
//# sourceMappingURL=generator-context.js.map