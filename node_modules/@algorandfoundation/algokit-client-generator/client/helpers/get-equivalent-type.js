"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.getEquivalentType = void 0;
const algosdk_1 = require("algosdk");
function getEquivalentType(abiTypeStr, ioType) {
    if (abiTypeStr == 'void') {
        return 'void';
    }
    if ((0, algosdk_1.abiTypeIsTransaction)(abiTypeStr)) {
        return 'TransactionToSign | Transaction | Promise<SendTransactionResult>';
    }
    if ((0, algosdk_1.abiTypeIsReference)(abiTypeStr)) {
        return 'number | bigint';
    }
    const abiType = algosdk_1.ABIType.from(abiTypeStr);
    return abiTypeToTs(abiType, ioType);
    function abiTypeToTs(abiType, ioType) {
        if (abiType instanceof algosdk_1.ABIUintType) {
            if (abiType.bitSize <= 51)
                return 'number';
            return ioType === 'input' ? 'bigint | number' : 'bigint';
        }
        if (abiType instanceof algosdk_1.ABIArrayDynamicType) {
            if (abiType.childType instanceof algosdk_1.ABIByteType)
                return 'Uint8Array';
            return `${abiTypeToTs(abiType.childType, ioType)}[]`;
        }
        if (abiType instanceof algosdk_1.ABIArrayStaticType) {
            if (abiType.childType instanceof algosdk_1.ABIByteType)
                return 'Uint8Array';
            return `[${new Array(abiType.staticLength).fill(abiTypeToTs(abiType.childType, ioType)).join(', ')}]`;
        }
        if (abiType instanceof algosdk_1.ABIAddressType) {
            return 'string';
        }
        if (abiType instanceof algosdk_1.ABIBoolType) {
            return 'boolean';
        }
        if (abiType instanceof algosdk_1.ABIUfixedType) {
            return 'number';
        }
        if (abiType instanceof algosdk_1.ABITupleType) {
            return `[${abiType.childTypes.map((c) => abiTypeToTs(c, ioType)).join(', ')}]`;
        }
        if (abiType instanceof algosdk_1.ABIByteType) {
            return 'number';
        }
        if (abiType instanceof algosdk_1.ABIStringType) {
            return 'string';
        }
        return 'unknown';
    }
}
exports.getEquivalentType = getEquivalentType;
//# sourceMappingURL=get-equivalent-type.js.map